注解：
定义：代码里的特殊标记。这些标记可以在编译、类加载、运行时被读取，并执行相应处理。
作用：
* 在不改变原有逻辑的情况下， 在源文件中嵌入一些补充信息。
* 代码分析工具、开发工具和部署工具可以通过这些补充信息进行验证、 处理或部署。
分类：
* 标准注解如覆盖超类中的方法@override，废弃方法，警告等。
* 元注解如注解其他注解，从而创建新的注解。
注解的定义：
* 定义注解：接口关键字
* 定义成员变量：无形参方法，及使用注解，成员变量有默认值。
* 定义运行时注解和编译时注解：设定注解保留策略@Retention。
编写注解处理器。
* 运行时注解采用反射机制处理；如retrofit的get方法。
* 编译时注解采用 AbstractProcessor 来处理。
依赖注入的作用：使对象之间解耦合。
依赖注入的三种实现方式：
* 构造方法注入；
* Setter方法注入；
* 接口注入。
依赖注入框架的作用：
* 使对象之间解耦合；
* 完成复杂的依赖。
ButterKnife原理解析：三个步骤。
Dagger2原理解析：三个步骤。

注解的定义，作用，分类；✔️
定义注解，定义注解成员变量；定义编译时注解和运行时注解。✔️
依赖注入的原理。✔️
依赖注入框架ButterKnife的原理。✔️
依赖注入框架Dagger2的原理。✔️

